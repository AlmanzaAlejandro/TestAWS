name: CICD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Project
        run: mvn clean install -DskipTests

      - name: Copiar .jar desde Servidores_Ejecutables
        run: |
          mkdir jars
          cp Servidores_Ejecutables/ServidorCorreo-1.0.jar jars/correo.jar
          cp Servidores_Ejecutables/ServidorConfiguracion-2.0.jar jars/configuracion.jar
          cp Servidores_Ejecutables/ServidorEureka-2.0.jar jars/eureka.jar
          cp Servidores_Ejecutables/ServidorGateway-2.0.jar jars/gateway.jar
          cp Servidores_Ejecutables/ServidorSeguridad-2.0.0.jar jars/seguridad.jar
          cp Servidores_Ejecutables/ServidorSeguridadCuentas-1.0.0.jar jars/cuentas.jar

      - name: Login to Docker Hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

      # Build Docker images con distintos Dockerfiles
      - name: Build Docker image 1
        run: docker build -t almanzaalejandro/correo -f "Dockerfile-correo" .

      - name: Build Docker image 2
        run: docker build -t almanzaalejandro/configuracion -f "Dockerfile-configuracion" .

      - name: Build Docker image 3
        run: docker build -t almanzaalejandro/eureka -f "Dockerfile-eureka" .

      - name: Build Docker image 4
        run: docker build -t almanzaalejandro/gateway -f "Dockerfile-gateway" .

      - name: Build Docker image 5
        run: docker build -t almanzaalejandro/seguridad -f "Dockerfile-seguridad" .

      - name: Build Docker image 6
        run: docker build -t almanzaalejandro/cuentas -f "Dockerfile-cuentas" .

      # Push im√°genes a Docker Hub
      - name: Push Image 1
        run: docker push almanzaalejandro/correo

      - name: Push Image 2
        run: docker push almanzaalejandro/configuracion

      - name: Push Image 3
        run: docker push almanzaalejandro/eureka

      - name: Push Image 4
        run: docker push almanzaalejandro/gateway
      
      - name: Push Image 5
        run: docker push almanzaalejandro/seguridad
      
      - name: Push Image 6
        run: docker push almanzaalejandro/cuentas

  deploy:
    needs: build
    runs-on: [aws-ec2]
    steps:
      - name: Pull images desde Docker Hub
        run: |
          docker pull almanzaalejandro/correo
          docker pull almanzaalejandro/configuracion
          docker pull almanzaalejandro/eureka
          docker pull almanzaalejandro/gateway
          docker pull almanzaalejandro/seguridad
          docker pull almanzaalejandro/cuentas

      - name: Eliminar contenedores anteriores
        run: |
          docker rm -f correo || true
          docker rm -f configuracion || true
          docker rm -f eureka || true
          docker rm -f gateway || true
          docker rm -f seguridad || true
          docker rm -f cuentas || true

      - name: Ejecutar contenedores nuevos
        run: |
          docker run -d -p 8081:8080 --name springboot-uno almanzaalejandro/correo
          docker run -d -p 8082:8080 --name springboot-dos almanzaalejandro/configuracion
          docker run -d -p 8083:8080 --name springboot-tres almanzaalejandro/eureka
          docker run -d -p 8084:8080 --name springboot-cuatro almanzaalejandro/gateway
          docker run -d -p 8085:8080 --name springboot-cuatro almanzaalejandro/seguridad
          docker run -d -p 8086:8080 --name springboot-cuatro almanzaalejandro/cuentas

      - name: Verificar contenedores activos
        run: docker ps
